Before submitting this file, make sure that there are no more TODO
placeholders remaining in the file (and remove this comment too).

Memory Debugging Warmup
-----------------------
Q1. What does the yellow background for a test case indicate in the SimpleTest result window?
A1. when there is a leak

Q2. What is the observed consequence of a test that uses `delete` on a memory address that has already been deallocated?
A2. program crashes

Q3. On your system, what is the observed consequence of `badDeallocate`? Under what circumstances (if any) did the buggy code trigger an error or crash?
A3. I ran the code 10+ times increasing the size up to 1000 and it didn't trigger any errors.

Q4. How is a segmentation fault presented on your system?
A4. the program crashes when not in the debug mode, in the debug mode it refuses to go past the second dereferencer

A segmentation fault (SIGSEGV) occurred during program execution

   This error indicates your program attempted to dereference a pointer
   to an invalid memory address (possibly out of bounds, deallocated, nullptr, ...)

*** To get more information about a program crash,
*** run your program again under the debugger.


Labyrinth
---------
Q5. What is a different legal path through the example labyrinth that gathers all three needed items?
A5. WNNEWSSEESNWSWWN

Sorting Linked Lists
---------------------
Q6. If the `deallocateList` utility function were implemented recursively, give a rough estimate of the maximum length list it could successfully handle. What would be the observed result from attempting to deallocate a list longer than this maximum?
A6. max is ~16k

Q7. The prototype for the sort function takes a `ListNode*` by reference. Explain why the pointer itself needs to be passed by reference and what the consequence would be if it were not.
A7. It must be passed by reference so that the links between the nodes are preserved and updated during sorting.

Q8. Run time trials and provide your results that confirm that QuickSort is O(NlogN) . Verify the runtime degrades to O(N^2) on inputs constructed to trigger the worst case behavior.
A8. TODO

Q9. Run the provided timing trials that compare your linked list QuickSort to a Vector sort on the same sequence and report the results. Who wins and why?
A9. TODO
